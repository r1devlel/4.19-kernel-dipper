name: Build Kernel for Mi 8 (Dipper)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Kernel Source
      uses: actions/checkout@v3

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y bc bison flex libssl-dev make \
          libc6-dev libncurses5-dev gcc g++ git curl wget ccache

    - name: Clone Toolchains
      run: |
        git clone --depth=1 https://github.com/kdrag0n/proton-clang clang
        git clone --depth=1 https://github.com/HermanTalha/aarch64-elf-gcc gcc64
        git clone --depth=1 https://github.com/HermanTalha/arm-eabi-gcc gcc32

    - name: Set Environment Variables
      run: |
        echo "CLANG_PATH=$GITHUB_WORKSPACE/clang" >> $GITHUB_ENV
        echo "GCC64_PATH=$GITHUB_WORKSPACE/gcc64" >> $GITHUB_ENV
        echo "GCC32_PATH=$GITHUB_WORKSPACE/gcc32" >> $GITHUB_ENV

    - name: Build Kernel
      run: |
        export ARCH=arm64
        export SUBARCH=arm64
        export KBUILD_BUILD_USER=github
        export KBUILD_BUILD_HOST=actions
        export PATH=$CLANG_PATH/bin:$PATH
        export CROSS_COMPILE=$GCC64_PATH/bin/aarch64-elf-
        export CROSS_COMPILE_ARM32=$GCC32_PATH/bin/arm-eabi-
        export CC=clang
        export CLANG_TRIPLE=aarch64-linux-gnu-

        make O=out defconfig
        make -j$(nproc) O=out

    - name: Upload Kernel Image
      uses: actions/upload-artifact@v3
      with:
        name: Image.gz-dtb
        path: out/arch/arm64/boot/Image.gz-dtb
